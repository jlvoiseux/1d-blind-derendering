function out = ComputeWallPoints(obs, T, n)
    
    out = zeros(n, T);
    
    % Compute start angles
    gap_start = obs(3) + obs(7);
    gap_end = obs(4);
    start_angles = linspace(gap_start, gap_end, n) - obs(7);
    sensor_length = 2*obs(8)*tand(obs(7)/2);
    
    for i=1:n
        angles = zeros(1, T);
        for j=1:T
            if j==1
                angles(j) = start_angles(i);
            else
                angles(j) = angles(1) + obs(7)/2 - atand(((sensor_length/2) - ((j-1)*sensor_length)/(T-1))/obs(8));
            end
            out(i, j) = obs(1)-obs(2)*tand(angles(j));
        end
    end
    
    obs_angle = linspace(angle1+90, angle2+90, 2);
    wall_points = zeros(2, 2);    
    for j=1:2
        obs_direction = [cos(obs_angle(j)*pi/180), sin(obs_angle(j)*pi/180)];
        wall_points(j, :) = obs([1 2]) + obs_direction*ray_wall_intersection(obs([1 2]), obs_direction);
    end    
    
end